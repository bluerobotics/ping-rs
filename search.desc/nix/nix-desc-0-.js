searchState.loadedDescShard("nix", 0, "Rust friendly bindings to the various *nix system …\nContains the error value\nNix’s main error type.\nCommon trait used to represent file system paths by many …\nContains the success value\nNix Result Type\nCreate a buffer large enough for storing some control …\nList directory contents\nEnvironment variables\nFeature tests for OS functionality\nQuery network interface addresses\nGenerates a wrapper function for an ioctl that passes no …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads data …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads an …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that reads and …\nGenerates a wrapper function for an ioctl that writes an …\nGenerates a wrapper function for a ioctl that writes an …\nGenerates a wrapper function for a “bad” ioctl that …\nGenerates a wrapper function for an ioctl that writes data …\nGenerates a wrapper function for a “bad” ioctl that …\nIs the path empty?\nLoad and unload kernel modules.\nLength of the path in bytes\nMount file systems\nPosix Message Queue functions\nFunctionality involving network interfaces\nWait for events to trigger on specific file descriptors\nCreate master and slave virtual pseudo-terminals (PTYs)\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nExecution scheduling\nMostly platform-specific functionality\nSafe wrappers around functions found in libc “unistd.h”…\nExecute a function with this path as a <code>CStr</code>.\nBlock device\nCharacter device\nAn open directory.\nDirectory\nA directory entry, similar to <code>std::fs::DirEntry</code>.\nFIFO (Named pipe)\nRegular file\nReturn type of <code>Dir::iter</code>.\nThe return type of Dir::into_iter\nUnix-domain socket\nSymbolic link\nType of file referenced by a directory entry\nReturns the bare file name of this directory entry without …\nReturns the type of this directory entry, if known.\nConverts from a descriptor-based object, closing the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from a file descriptor, closing it on success or …\nReturns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a owning iterator, that is, one that takes …\nReturns an iterator of <code>Result&lt;Entry&gt;</code> which rewinds when …\nOpens the given path as with <code>fcntl::open</code>.\nOpens the given path as with <code>fcntl::openat</code>.\nIndicates that <code>clearenv</code> failed for some unknown reason\nClear the environment of all name-value pairs.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe sentinel value indicates that a function failed and …\nReturns the platform-specific value of errno\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns <code>Ok(value)</code> if it does not contain the sentinel …\nRemoves byte range from a file without leaving a hole.\nIncreases file space by inserting a hole within the file …\nFile size is not changed.\nDeallocates space by creating a hole.\nShared file data extants are made private to the file.\nZeroes space in specified byte range.\nThe file descriptor will automatically be closed during a …\nThe size of the file cannot be increased.\nPrevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.\nThe file cannot be reduced in size.\nThe file contents cannot be modified.\nMode argument flags for fallocate determining operation …\nAdditional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.\nConfiguration options for opened files.\nMask for the access mode of the file.\nOpen the file in append-only mode.\nGenerate a signal when input or output becomes possible.\nCloses the file descriptor once an <code>execve</code> call is made.\nCreate the file if it does not exist.\nTry to minimize cache effects of the I/O for this file.\nIf the specified path isn’t a directory, fail.\nImplicitly follow each <code>write()</code> with an <code>fdatasync()</code>.\nError out if a file was not created.\nSame as <code>O_SYNC</code>.\nAllow files whose sizes can’t be represented in an <code>off_t</code> …\nSame as <code>O_NONBLOCK</code>.\nDo not update the file last access time during <code>read(2)</code>s.\nDon’t attach the device as the process’ controlling …\n<code>open()</code> will fail if the given path is a symbolic link.\nWhen possible, open the file in nonblocking mode.\nObtain a file descriptor for low-level access.\nOnly allow reading.\nAllow both reading and writing.\nSimilar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.\nImplicitly follow each <code>write()</code> with an <code>fsync()</code>.\nCreate an unnamed temporary file.\nTruncate an existing regular file to 0 length if it allows …\nOnly allow writing.\nGift the user pages to the kernel.\nHint that more data will be coming in a subsequent splice.\nRequest that pages be moved instead of copied.\nDo not block on I/O.\nAdditional flags for file sealing, which allows for …\nAdditional flags to <code>splice</code> and friends.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nCopy a range of data from one file to another\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nManipulates file space.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nCheck if the OS supports atomic close-on-exec for sockets\nDescribes a single address for an interface as returned by …\nHolds the results of <code>getifaddrs</code>.\nNetwork address of this interface\nBroadcast address of this interface, if applicable\nPoint-to-point destination address\nFlags as from <code>SIOCGIFFLAGS</code> ioctl\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet interface addresses using libc’s <code>getifaddrs</code>\nName of the network interface\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetmask of this interface\nFlags used by <code>delete_module</code>.\nIgnore symbol version hashes.\nIgnore kernel version magic.\nFlags used by the <code>finit_module</code> function.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nUnloads the kernel module with the given name.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nLoads a kernel module from a given file descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nLoads a kernel module from a buffer.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nLinux 2.4.0 - Bind directory at different place\nDirectory modifications are synchronous\nAllow mandatory locks on a FS\nDo not update access times\nDisallow access to device special files\nDo not update directory access times\nDisallow program execution\nIgnore suid and sgid bits\nMount read-only\nAlter flags of a mounted FS\nWrites are synced at once\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUsed with <code>mq_open</code>.\nA message-queue attribute, optionally used with <code>mq_setattr</code> …\nIdentifies an open POSIX Message Queue\nSet the close-on-exec flag for the message queue …\nCreate a message queue.\nIf set along with <code>O_CREAT</code>, <code>mq_open</code> will fail if the message\n<code>mq_send</code> and <code>mq_receive</code> should fail with <code>EAGAIN</code> rather than …\nOpen the message queue for receiving messages.\nOpen the queue for both receiving and sending messages\nOpen the queue for sending messages.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nThe number of messages currently held in the queue\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nThe current flags, either <code>0</code> or <code>O_NONBLOCK</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nThe max number of messages that can be held by the queue\nSize of a message queue attribute member\nClose a message queue\nGet message queue attributes\nOpen a message queue\nReceive a message from a message queue\nConvenience function. Removes <code>O_NONBLOCK</code> attribute for a …\nSend a message to a message queue\nConvenience function. Sets the <code>O_NONBLOCK</code> attribute for a …\nSet the attributes of the message queue. Only <code>O_NONBLOCK</code> …\nRemove a message queue\nThe maximum size of each message (in bytes)\nCreate a new message queue attribute\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nNetwork interface name resolution.\nReceive all multicast packets. (see <code>netdevice(7)</code>)\nAuto media selection active. (see <code>netdevice(7)</code>)\nValid broadcast address set. (see <code>netdevice(7)</code>)\nInternal debugging flag. (see <code>netdevice(7)</code>)\nDriver signals dormant. Volatile.\nThe addresses are lost when the interface goes down. (see …\nEcho sent packets. Volatile.\nInterface is a loopback interface. (see <code>netdevice(7)</code>)\nDriver signals L1 up. Volatile.\nMaster of a load balancing bundle. (see <code>netdevice(7)</code>)\nSupports multicast. (see <code>netdevice(7)</code>)\nNo arp protocol, L2 destination address not set. (see …\nAvoid use of trailers. (see <code>netdevice(7)</code>)\nDo not provide packet information\nInterface is a point-to-point link. (see <code>netdevice(7)</code>)\nIs able to select media type via ifmap. (see <code>netdevice(7)</code>)\nInterface is in promiscuous mode. (see <code>netdevice(7)</code>)\nResources allocated. (see <code>netdevice(7)</code>)\nSlave of a load balancing bundle. (see <code>netdevice(7)</code>)\nTAP device\nTUN device (no Ethernet headers)\nInterface is running. (see <code>netdevice(7)</code>)\nA network interface. Has a name like “eth0” or “…\nStandard interface flags, used by <code>getifaddrs</code>\nA list of the network interfaces available on this system. …\nAn iterator over the interfaces in an <code>Interfaces</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nRetrieve a list of the network interfaces available on the …\nResolve an interface into a interface number.\nObtain the index of this interface.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nIterate over the interfaces in this list.\nObtain the name of this interface.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nConvert this to a slice of interfaces. Note that the …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nError condition (only returned in <code>PollFd::revents</code>; ignored …\nHang up (only returned in <code>PollFd::revents</code>; ignored in …\nThere is data to read.\nInvalid request: <code>fd</code> not open (only returned in …\nWriting is now possible, though a write larger that the …\nThere is some exceptional condition on the file descriptor.\nPriority band data can be read (generally unused on Linux).\nEquivalent to <code>POLLIN</code>\nPriority data may be written.\nEquivalent to <code>POLLOUT</code>\nThis is a wrapper around <code>libc::pollfd</code>.\nThese flags define the different events that can be …\nReturns if all the events of interest occured in the last …\nReturns the set containing all flags.\nReturns if any of the events of interest occured in the …\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nThe events of interest for this <code>PollFd</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nCreates a new <code>PollFd</code> specifying the events of interest for …\nReturns the complement of this set of flags.\n<code>poll</code> waits for one of a set of file descriptors to become …\n<code>ppoll()</code> allows an application to safely wait until either …\nRemoves the specified flags in-place.\nReturns the events that occurred in the last call to <code>poll</code> …\nInserts or removes the specified flags depending on the …\nModify the events of interest for this <code>PollFd</code>.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRepresentation of a master with a forked pty\nRepresentation of a master/slave pty pair\nRepresentation of the Master device in a master/slave pty …\nMetadata about forked process\nCreate a new pseudoterminal, returning the master file …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrant access to a slave pseudoterminal (see <code>grantpt(3)</code>)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe master port in a virtual pty pair\nThe master port in a virtual pty pair\nCreate a new pseudoterminal, returning the slave and …\nOpen a pseudoterminal device (see <code>posix_openpt(3)</code>)\nGet the name of the slave pseudoterminal (see <code>ptsname(3)</code>)\nGet the name of the slave pseudoterminal (see <code>ptsname(3)</code>)\nThe slave port in a virtual pty pair\nUnlock a pseudoterminal master/slave pseudoterminal pair …\nUnused since Linux 2.6.2\nThe calling process and the child process share the same …\nThe caller and the child process share the same  filesystem\nThe new process shares an I/O context with the calling …\nCreate the process in a new cgroup namespace.\nCreate the process in a new IPC namespace.\nCreate the process in a new network namespace.\nThe cloned child is started in a new mount namespace.\nCreate the process in a new PID namespace.\nCreate the process in a new user namespace.\nCreate the process in a new UTS namespace.\nThe parent of the new child  (as returned by getppid(2)) …\nIf the calling process is being traced, then trace the …\nThe calling process and the child process share the same …\nThe child and the calling process share a single list of …\nThe child is placed in the same thread group as the calling\nA tracing process cannot force <code>CLONE_PTRACE</code> on this child …\nThe execution of the calling process is suspended until the\nThe calling process and the child process run in the same …\nType for the function executed by <code>clone</code>.\nOptions for use with <code>clone</code>\nCpuSet represent a bit-mask of CPUs. CpuSets are used by …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\n<code>clone</code> create a child process (<code>clone(2)</code>)\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturn the maximum number of CPU in CpuSet\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nTest to see if a CPU is in the CpuSet. <code>field</code> is the CPU id …\nCreate a new and empty CpuSet.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\n<code>sched_getaffinity</code> get a thread’s CPU affinity mask (…\nDetermines the CPU on which the calling thread is running.\n<code>sched_setaffinity</code> set a thread’s CPU affinity mask (…\nExplicitly yield the processor to other threads.\nInserts or removes the specified flags depending on the …\nAdd a CPU to CpuSet. <code>field</code> is the CPU id to add\nreassociate thread with a namespace\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRemove a CPU from CpuSet. <code>field</code> is the CPU id to remove\ndisassociate parts of the process execution context\nPOSIX Asynchronous I/O\nMonitoring API for filesystem events.\nProvide helpers for making ioctl system calls.\nInterfaces for managing memory-backed files.\nMemory management declarations.\nProcess execution domains\nLow level threading primitives\nProvides helpers for making ptrace system calls\nSet and configure disk quotas for users, groups, or …\nReboot/shutdown or enable/disable Ctrl-Alt-Delete.\nConfigure the process resource limits.\nPortably monitor a group of file descriptors for readiness.\nSend data from a file to a socket, bypassing userland.\nOperating system signals.\nInterface for the <code>signalfd</code> syscall.\nSocket interface functions\nGet filesystem statistics, non-portably\nGet filesystem statistics\nAn interface for controlling asynchronous communication …\nTimer API via signals.\nTimer API via file descriptors.\nVectored I/O\nGet system identification\nWait for a process to change status\nMethods common to all AIO operations\nAll of the requests have already finished\nReturn values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>\nAll outstanding requests were canceled\nAn asynchronous version of <code>fsync(2)</code>.\nMode for <code>AioCb::fsync</code>.  Controls whether only data or both …\nSome requests were not canceled.  Their status should be …\nAsynchronously reads from a file descriptor into a buffer\nAsynchronously writes from a buffer to a file descriptor\nRequests that <code>lio_listio</code> return immediately\nRequests that <code>lio_listio</code> block until all requested …\nMode for <code>lio_listio</code>\non supported operating systems only, do it like <code>fdatasync</code>\ndo it like <code>fsync</code>\nThe return type of <code>Aio::aio_return</code>.\nCancels outstanding AIO requests for a given file …\nRetrieve return status of an asynchronous operation.\nSuspends the calling process until at least one of the …\nCancels an outstanding AIO request.\nRetrieve error status of an asynchronous operation.\nReturns the underlying file descriptor associated with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDoes this operation currently have any in-kernel state?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubmits multiple asynchronous I/O requests with a single …\nReturns the operation’s fsync mode: data and metadata or …\nReturns the requested length of the aio operation in bytes\nReturns the requested length of the aio operation in bytes\nConstruct a new <code>AioWrite</code>.\nCreate a new <code>AioRead</code>, placing the data in a mutable slice.\nCreate a new <code>AioFsync</code>.\nReturns the file offset of the operation.\nReturns the file offset of the operation.\nReturns the priority of the <code>AioCb</code>\nUpdate the notification settings for an existing AIO …\nReturns the <code>SigEvent</code> that will be used for notification.\nActually start the I/O operation.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nConfiguration options for <code>inotify_add_watch</code>.\nFile was accessed.\nAll of the events.\nMetadata changed.\nSet the <code>FD_CLOEXEC</code> flag on the file descriptor.\nCombination of <code>IN_CLOSE_WRITE</code> and <code>IN_CLOSE_NOWRITE</code>.\nNonwritable file was closed.\nWritable file was closed.\nSubfile was created.\nSubfile was deleted.\nSelf was deleted.\nDon’t follow symlinks.\nFile was ignored.\nEvent occurred against directory.\nFile was modified.\nCombination of <code>IN_MOVED_FROM</code> and <code>IN_MOVED_TO</code>.\nFile was moved from X.\nFile was moved to Y.\nSelf was moved.\nSet the <code>O_NONBLOCK</code> flag on the open file description …\nOnly send event once.\nOnly watch the path if it is a directory.\nFile was opened.\nEvent queue overflowed.\nBacking filesystem was unmounted.\nConfiguration options for <code>inotify_init1</code>.\nAn inotify instance. This is also a file descriptor, you …\nA single inotify event.\nThis object is returned when you create a new watch on an …\nAdds a new watch on the target file or directory.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nThis cookie is a number that allows you to connect related …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInitialize a new inotify instance.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nEvent mask. This field is a bitfield describing the exact …\nFilename. This field exists only if the event was …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReads a collection of events from the inotify file …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves an existing watch using the watch descriptor …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nWatch descriptor. This field corresponds to the watch …\nGenerate an ioctl request code for a command that passes …\nGenerate an ioctl request code for a command that reads.\nGenerate an ioctl request code for a command that reads …\nGenerate an ioctl request code for a command that writes.\nAllow sealing operations on this file.\nSet the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …\nOptions that change the behavior of <code>memfd_create</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nCreates an anonymous file that lives in memory, and return …\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUndo the effect of an earlier <code>MADV_DONTDUMP</code>.\nUndo the effect of <code>MADV_DONTFORK</code>.\nExclude the given range from a core dump.\nDo not make pages in this range available to the child …\nDo not expect access in the near future.\nSpecify that the application no longer needs the pages in …\nEnable Transparent Huge Pages (THP) for pages in the given …\nPoison the given pages.\nEnable Kernel Samepage Merging (KSM) for the given pages.\nUndo the effect of <code>MADV_HUGEPAGE</code>.\nNo further special treatment. This is the default.\nExpect random page references.\nFree up a given range of pages and its associated backing …\nExpect sequential page references.\nPreserve the memory of each page but offline the original …\nUndo the effect of <code>MADV_MERGEABLE</code>\nExpect access in the near future.\nPut the mapping into the first 2GB of the process address …\nSynonym for <code>MAP_ANONYMOUS</code>.\nThe mapping is not backed by any file.\nCompatibility flag. Ignored.\nCompatibility flag. Ignored.\nCompatibility flag. Ignored.\nPlace the mapping at exactly the address specified in <code>addr</code>.\nPlace the mapping at exactly the address specified in <code>addr</code>…\nUsed for stacks; indicates to the kernel that the mapping …\nAllocate the mapping using “huge pages.”\nMake use of 16GB huge page (must be supported by the …\nMake use of 16MB huge page (must be supported by the …\nMake use of 1GB huge page (must be supported by the system)\nMake use of 1MB huge page (must be supported by the system)\nMake use of 256MB huge page (must be supported by the …\nMake use of 2GB huge page (must be supported by the system)\nMake use of 2MB huge page (must be supported by the system)\nMake use of 32MB huge page (must be supported by the …\nMake use of 512KB huge page (must be supported by the …\nMake use of 512MB huge page (must be supported by the …\nMake use of 64KB huge page (must be supported by the …\nMake use of 8MB huge page (must be supported by the system)\nMark the mmaped region to be locked in the same way as …\nOnly meaningful when used with <code>MAP_POPULATE</code>. Don’t …\nDo not reserve swap space for this mapping.\nPopulate page tables for a mapping.\nCreate a private copy-on-write mapping. Mutually exclusive …\nShare this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.\nRegion grows down, like a stack.\nLock pages that are currently mapped into the address …\nLock pages which will become mapped into the address space …\nPlace the mapping at exactly the address specified in …\nPermit the kernel to relocate the mapping to a new virtual …\nOptions for <code>mremap</code>.\nSchedule an update but return immediately.\nInvalidate all cached data.\nPerform an update and wait for it to complete.\nAdditional parameters for <code>mmap</code>.\nFlags for <code>mlockall</code>.\nUsage information for a range of memory to allow for …\nConfiguration flags for <code>msync</code>.\nPages can be executed\nApply protection up to the end of a mapping that grows …\nApply protection down to the beginning of a mapping that …\nPages cannot be accessed.\nPages can be read.\nPages can be written.\nDesired memory protection of a memory mapping.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\ngive advice about use of memory\nLocks all memory pages that contain part of the address …\nLocks all memory pages mapped into this process’ address …\nallocate memory, or map files or devices into memory\nSet protection of memory mapping.\nExpands (or shrinks) an existing memory mapping, …\nsynchronize a mapped region\nUnlocks all memory pages that contain part of the address …\nUnlocks all memory pages mapped into this process’ …\nremove a mapping\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nCreates and opens a new, or opens an existing, POSIX …\nPerforms the converse of <code>shm_open</code>, removing an object …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nProvide the legacy virtual address space layout.\nLimit the address space to 32 bits.\nUse <code>0xc0000000</code> as the offset at which to search a virtual …\nDisable address-space-layout randomization.\nUser-space function pointers to signal handlers point to …\nMap page 0 as read-only.\nFlags used and returned by <code>get()</code> and <code>set()</code>.\n<code>PROT_READ</code> implies <code>PROT_EXEC</code> for <code>mmap(2)</code>.\nNo effects.\n<code>select(2)</code>, <code>pselect(2)</code>, and <code>ppoll(2)</code> do not modify the …\nHave <code>uname(2)</code> report a 2.6.40+ version number rather than …\nNo effects.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nRetrieve the current process personality.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nSet the current process personality.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nIdentifies an individual thread.\nSend a signal to a thread (see <code>pthread_kill(3)</code>).\nObtain ID of the calling thread (see <code>pthread_self(3)</code>\nUsing the ptrace options the tracer can configure the …\nPtrace options used in conjunction with the …\nEvent that stops before a return from clone.\nEvent that stops before a return from execve.\nEvent for a stop before an exit. Unlike the waitpid Exit …\nEvent that stops before a return from fork or clone.\nStop triggered by a seccomp rule on a tracee.\nStop triggered by the <code>INTERRUPT</code> syscall, or a group stop, …\nEvent that stops before a return from vfork or clone.\nEvent for a return from vfork.\nSend a SIGKILL to the tracee if the tracer exits.  This is …\nStop tracee at next clone call and trace the cloned …\nStop tracee at next execve call.\nStop tracee at next exit call. Stops before exit commences …\nStop tracee at next fork and start tracing the forked …\nStop tracee when a SECCOMP_RET_TRACE rule is triggered. …\nWhen delivering system call traps set a bit to allow …\nStop tracee at next vfork call and trace the vforked …\nStop tracee at vfork completion.\nPtrace Request enum defining the action to be taken.\nReturns the set containing all flags.\nAttach to a running process, as with …\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nRestart the stopped tracee process, as with …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nDetaches the current running process, as with …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGets a ptrace event as described by …\nGet user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>\nGet siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>\nInserts the specified flags in-place.\nStop a tracee, as with <code>ptrace(PTRACE_INTERRUPT, ...)</code>\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nIssues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>\nReturns the complement of this set of flags.\nReads a word from a processes memory at the given address\nReads a word from a user area at <code>offset</code>. The user struct …\nRemoves the specified flags in-place.\nAttach to a running process, as with …\nInserts or removes the specified flags depending on the …\nSet options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.\nSet user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>\nSet siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>\nMove the stopped tracee process forward by a single step …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nContinue execution until the next syscall, as with …\nContinue execution until the next syscall, as with …\nMove the stopped tracee process forward by a single step …\nToggles the specified flags in-place.\nSets the process as traceable, as with …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nWrites a word into the processes memory at the given …\nWrites a word to a user area at <code>offset</code>. The user struct …\nWrapper type for <code>if_dqblk</code>\nSpecify a group quota\nUse the original quota format.\nUse the standard VFS v0 quota format.\nUse the VFS v1 quota format.\nAll fields.\nThe block hard &amp; soft limit fields.\nThe disk use time limit field.\nThe inode hard &amp; soft limit fields.\nThe current inodes field.\nThe file quote time limit field.\nAll block &amp; inode limits.\nThe current space field.\nThe time limit fields.\nThe space &amp; inodes usage fields.\nThe type of quota format to use.\nThe scope of the quota.\nIndicates the quota fields that are valid to read from.\nSpecify a user quota\nReturns the set containing all flags.\nCurrent number of allocated inodes.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nTime limit for excessive disk use.\nThe absolute limit on disk quota blocks allocated.\nPreferred limit on disk quota blocks\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nTime limit for excessive files.\nMaximum number of allocated inodes.\nPreferred inode limit\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nCurrent occupied space (bytes).\nGet disk quota limits and current usage for the given …\nDisable disk quotas for a block device.\nTurn on disk quotas for a block device.\nConfigure quota values for the specified fields for a …\nUpdate the on-disk copy of quota usages for a filesystem.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nSet the time limit for excessive disk use.\nSet the absolute limit on disk quota blocks allocated.\nSet the preferred limit on disk quota blocks allocated.\nSet the time limit for excessive files.\nSet the maximum number of allocated inodes.\nSet the preferred limit of allocated inodes.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRestart the system.\nHalt the system.\nExecute a kernel that has been loaded earlier with …\nStop the system and switch off power, if possible.\nSuspend the system using software suspend.\nHow exactly should the system be rebooted.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReboots or shuts down the system.\nEnable or disable the reboot keystroke (Ctrl-Alt-Delete).\nThe maximum amount (in bytes) of virtual memory the …\nThe largest size (in bytes) core(5) file that may be …\nThe maximum amount of cpu time (in seconds) to be used by …\nThe maximum size (in bytes) of the data segment for a …\nThe largest size (in bytes) file that may be created.\nA limit on the combined number of flock locks and fcntl …\nThe maximum size (in bytes) which a process may lock into …\nA limit on the number of bytes that can be allocated for …\nA ceiling to which the process’s nice value can be …\nThe maximum number of open files for this process.\nThe maximum number of simultaneous processes for this user …\nWhen there is memory pressure and swap is available, …\nA ceiling on the real-time priority that may be set for …\nA limit (in microseconds) on the amount of CPU time that a …\nA limit on the number of signals that may be queued for …\nThe maximum size (in bytes) of the stack segment for a …\nResource usage for all the children that have terminated …\nResource usage for the current process.\nResource usage for the calling thread.\nTypes of process resources.\nOutput of <code>getrusage</code> with information about resource usage. …\nWhose resource usage should be returned by <code>getrusage</code>.\nNumber of times a read was done from a block device.\nNumber of times a write was done to a block device.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNumber of times all of the memory was fully swapped out.\nGet the current processes resource limits\nGet usage information for a process, its children or the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of times a context switch was imposed by the kernel …\nNumber of IPC messages received.\nNumber of IPC messages sent.\nNumber of page faults that were served through I/O (i.e. …\nThe resident set size at its peak, in kilobytes.\nNumber of page faults that were served without resorting …\nSet the current processes resource limits\nIntegral value expressed in kilobytes times ticks of …\nNumber of signals received.\nTotal amount of time spent executing in kernel mode.\nIntegral value expressed in kilobytes times ticks of …\nIntegral value expressed in kilobytes times ticks of …\nTotal amount of time spent executing in user mode.\nNumber of times a context switch was voluntarily invoked.\nContains a set of file descriptors used by <code>select</code>\nIterator over <code>FdSet</code>.\nRemove all file descriptors from this <code>FdSet</code>.\nTest an <code>FdSet</code> for the presence of a certain file …\nReturns an iterator over the file descriptors in the set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFinds the highest file descriptor in the set.\nAdd a file descriptor to an <code>FdSet</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an empty <code>FdSet</code>\nMonitors file descriptors for readiness with an altered …\nRemove a file descriptor from an <code>FdSet</code>\nMonitors file descriptors for readiness\nCopy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …\nCopy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …\nUse the given signal-catching function, which takes in the …\nWhen catching a <code>Signal::SIGCHLD</code> signal, the signal will be …\nWhen catching a <code>Signal::SIGCHLD</code> signal, the system will not\nFurther occurrences of the delivered signal are not masked …\nThe system will deliver the signal to the process on a …\nThe handler is reset back to the default at the moment the …\nRequests that certain system calls restart if interrupted …\nThis flag is controlled internally by Nix.\nAbort\nAlarm clock\nBus error\nTo parent on child stop or exit\nContinue a stopped process\nFloating point exception\nHangup\nIllegal instruction (not reset when caught)\nInterrupt\nInput/output possible signal\nAlias for <code>SIGABRT</code>\nKill (cannot be caught or ignored)\nWrite on a pipe with no one to read it\nAlias for <code>SIGIO</code>\nProfiling time alarm\nPower failure imminent.\nQuit\nSegmentation violation\nStack fault (obsolete)\nSendable stop signal not from tty\nBad system call\nSoftware termination signal from kill\nTrace trap (not reset when caught)\nStop signal from tty\nTo readers pgrp upon background tty read\nLike TTIN if (tp-&gt;t_local&amp;LTOSTOP)\nAlias for <code>SIGSYS</code>\nUrgent condition on IO channel\nUser defined signal 1\nUser defined signal 2\nVirtual time alarm\nWindow size changes\nExceeded CPU time limit\nExceeded file size limit\nThe new mask is the union of the current mask and the …\nThe current mask is replaced by the specified set.\nThe new mask is the intersection of the current mask and …\nControls the behavior of a <code>SigAction</code>\nAction to take on receipt of a signal. Corresponds to …\nUse the given signal-catching function, which takes in the …\nDefault signal handling.\nUsed to request asynchronous notification of the …\nA signal handler.\nRequest that the signal be ignored.\nSpecifies a set of <code>Signal</code>s that may be blocked, waited …\nIterator for a <code>SigSet</code>.\nNo notification will be delivered\nSpecifies the notification method used by a <code>SigEvent</code>\nNotify by delivering a signal to the process.\nNotify by delivering a signal to a thread.\nSpecifies how certain functions should manipulate a signal …\nTypes of operating system signals\nIterate through all signals defined by this operating …\nAdd the specified signal to the set.\nReturns the set containing all flags.\nInitialize to include all signals.\nReturns a mutable pointer to the <code>sigevent</code> wrapped by <code>self</code>\nReturns name of signal.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nRemove all signals from this set.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturn whether this set includes the specified signal.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nInitialize to include nothing.\nReturns the flags set on the action.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConverts a <code>libc::sigset_t</code> object to a <code>SigSet</code> without …\nReturns the action’s handler.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns an iterator that yields the signals contained in …\nIterate through all signals defined by this OS\nSend a signal to a process\nSend a signal to a process group\nReturns the set of signals that are blocked during …\nCreates a new action.\n<strong>Note:</strong> this constructor does not allow the user to set the …\nReturns the complement of this set of flags.\nManages the signal mask (set of blocked signals) for the …\nSend a signal to the current thread\nRemoves the specified flags in-place.\nRemove the specified signal from this set.\nInserts or removes the specified flags depending on the …\nChanges the action taken by a process on receipt of a …\nReturn a copy of the inner structure\nSignal management (see signal(3p))\nExamine and change blocked signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nAdds the set of signals to the signal mask for the calling …\nGets the currently blocked (masked) set of signals for the …\nSets the set of signals as the signal mask for the calling …\nSets the set of signals as the signal mask, and returns …\nRemoves the set of signals from the signal mask for the …\nToggles the specified flags in-place.\nIdentifies a thread for <code>SigevNotify::SigevThreadId</code>\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nSuspends execution of the calling thread until one of the …\nWill be present in the <code>si_value</code> field of the …\nWill be present in the <code>si_value</code> field of the …\nSignal to deliver\nSignal to send\nLWP ID of the thread to notify\nA helper struct for creating, reading and closing a …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nCreates a new file descriptor for reading signals.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nThese constants specify the protocol family to be used in …\nInterface to kernel crypto API\nSocket address for the Linux kernel crypto API\nSet the length of associated authentication data (AAD) …\nSet IV for <code>AF_ALG</code> crypto API.\nSet crypto operation for <code>AF_ALG</code> crypto API. It may be one …\nAppleTalk\nAccess to raw ATM PVCs\nAccess to ATM Switched Virtual Circuits\nAmateur radio AX.25 protocol\nBluetooth low-level socket protocol\nFurther receptions and transmissions will be disallowed.\nCan’t be used for creating sockets; mostly used for …\nEricsson’s Communication CPU to Application CPU …\nController Area Network automotive bus protocol\nA type-safe zero-copy wrapper around a single control …\nA type-safe wrapper around a single control message, as …\nSupports datagrams (connectionless, unreliable messages of …\nDECet protocol sockets.\nAcorn Econet protocol\nNon-DIX type protocol number defined for the Ethernet IEEE …\nRepresents a socket option that can be retrieved.\nInfiniBand native addressing\nIEEE 802.15.4 WPAN (wireless personal area network) raw …\nIPv4 Internet protocols (see <code>ip(7)</code>)\nIPv6 Internet protocols (see <code>ipv6(7)</code>)\nRequest for multicast socket operations\nConfigure the sending addressing and interface for v4\nSocket error queue control messages read with the …\nRequest for ipv6 multicast socket operations\nConfigure the sending addressing and interface for v6\nSocket error queue control messages read with the …\nIPX - Novell protocols\nSocket interface over IrDA\nNew “modular ISDN” driver interface protocol\nIUCV (inter-user communication vehicle) z/VM protocol for …\nKey management protocol.\nDatalink address (MAC)\nHardware Address\nLogical link control (IEEE 802.2 LLC) protocol\nSet the <code>close-on-exec</code> flag for the file descriptor …\nReceive flags: Control Data was discarded (buffer too …\nEnables nonblocking operation; if the operation would …\nTerminates a record (when this notion is supported, as for …\nThis flag specifies that queued errors should be received …\nRequests not to send <code>SIGPIPE</code> errors when the other end …\nSends or requests out-of-band data on sockets that support …\nPeeks at an incoming message. The data is treated as …\nFor raw (<code>Packet</code>), Internet datagram (since Linux …\nReceive operation blocks until the full amount of data can …\nMultiprotocol Label Switching\nFlags for send/recv and their relatives\nPreallocated structures needed for <code>recvmmsg</code> and <code>sendmmsg</code> …\nIterator over results of <code>recvmmsg</code>/<code>sendmmsg</code>\nReserved for “802.2LLC project”; never used.\nAX.25 packet layer protocol. (see netrom(4))\nKernel user interface device (see <code>netlink(7)</code>)\nAddress for the Linux kernel user interface device.\nAuditing (ref)\nNetlink interface to request information about ciphers …\nDECnet routing messages (ref)\nAccess to FIB lookup from user space (ref)\nTransport IPv6 packets from netfilter to user space.  Used …\nOpen-iSCSI (ref)\nKernel messages to user space (ref)\nNetfilter subsystem (ref)\nInfiniband RDMA (ref)\nReceives routing and link updates and may be used to …\nSCSI Transports (ref)\nSELinux event notifications. (ref)\nQuery information about sockets of various protocol …\nReserved for user-mode socket protocols (ref)\nNear field communication\nLow level packet interface (see <code>packet(7)</code>)\nNokia cellular modem IPC/RPC interface\nGeneric PPP transport layer, for setting up L2 tunnels …\nProvides raw network protocol access.\nRaw sockets (raw(7))\nProvides a reliable datagram layer that does not guarantee …\nReliable Datagram Sockets (RDS) protocol\nFurther receptions will be disallowed.\nContains outcome of sending or receiving a message\nRATS (Radio Amateur Telecommunications Society) Open …\nRx, Andrew File System remote procedure call protocol\nSO_RXQ_OVFL indicates that an unsigned 32 bit value …\nSO_RXQ_OVFL indicates that an unsigned 32 bit value …\nSet close-on-exec on the new descriptor\nSet non-blocking mode on the new socket\nReport hardware timestamps as generated by …\nCollect receiving timestamps as reported by hardware\nCollect receiving timestamps as reported by software\nReport any software timestamps when available.\nCollect transmiting timestamps as reported by hardware\nCollect transmiting timestamps as reported by software\nReceived version of <code>ControlMessage::ScmCredentials</code>\nA message of type <code>SCM_CREDENTIALS</code>, containing the pid, uid …\nReceived version of <code>ControlMessage::ScmRights</code>\nA message of type <code>SCM_RIGHTS</code>, containing an array of file …\nA message of type <code>SCM_TIMESTAMP</code>, containing the time the …\nNanoseconds resolution timestamp\nA set of nanosecond resolution timestamps\nThis was a short-lived (between Linux 2.1.30 and …\nProvides a sequenced, reliable, two-way connection- based …\nRepresents a socket option that can be set.\nIBM SNA\nRepresents a socket address\nAdditional socket options\nConstants used in <code>socket</code> and <code>socketpair</code> to specify the …\nThese constants are used to specify the communication …\nAn IPv4 socket address\nAn IPv6 socket address\nAnything that, in C, can be cast back and forth to <code>sockaddr</code>…\nA container for any sockaddr type\nProvides sequenced, reliable, two-way, connection- based …\nTCP protocol (ip(7))\nConfiguration flags for <code>SO_TIMESTAMPING</code> interface\nFor representing packet timestamps via <code>SO_TIMESTAMPING</code> …\nTIPC, “cluster domain sockets” protocol\nConfigure the transmission time of packets.\nUDP protocol (ip(7))\nUDP Generic Receive Offload (GRO) allows receiving …\nUDP GSO makes it possible for applications to generate …\nLocal communication (see <code>unix(7)</code>)\nA wrapper around <code>sockaddr_un</code>.\nUnix credentials of the sending process.\nUnspecified address family, (see <code>getaddrinfo(3)</code>)\nVMWare VSockets protocol for hypervisor-guest interaction.\nSocket address for VMWare VSockets protocol\nLegacy protocol for wide area network (WAN) connectivity …\nFurther  transmissions will be disallowed.\nITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)\nAccept a connection on a socket\nAccept a connection on a socket\nPhysical-layer address (MAC)\nReturn the socket’s cipher name, for example <code>sha1</code>.\nReturn the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nIf this address represents an abstract socket, return its …\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nConversion from nix’s SockAddr type to the underlying …\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nReturns a mutable pointer to the raw <code>sockaddr_un</code> struct\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nReturns a raw pointer to the inner structure.  Useful for …\nReturns a raw pointer to the inner structure.  Useful for …\nReturns a pointer to the raw <code>sockaddr_un</code> struct\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nSafely and falliably downcast to a mutable reference\nDowncast to an immutable <code>[UnixAddr]</code> reference.\nDowncast to a mutable <code>[UnixAddr]</code> reference.\nSafely and falliably downcast to an immutable reference\nSafely and falliably downcast to a mutable reference\nBind a name to a socket\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nContext Identifier (CID)\nIterate over the valid control messages pointed to by this …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nInitiate a connection on a socket\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturn the address family of this socket\nReturn the address family of this socket\nReturns the flow information associated with this address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nCreate a new <code>AddressFamily</code> from an integer value retrieved …\nUnsafe constructor from a variable length source\nLook up the value of this socket option on the given …\nGet the address of the peer connected to the socket <code>fd</code>.\nGet the current address to which the socket <code>fd</code> is bound.\nGet the current value for the requested socket option\nReturns the group identifier\nReturn the socket’s multicast groups mask\nLength of MAC address\nARP hardware type\nhardware based timestamp\nlegacy timestamp, usually empty\nInterface number\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over the filled io slices pointed by this msghdr\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket …\nGets the IP address associated with this socket address.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nCheck if this address is an “unnamed” unix socket …\nReturn the length of valid data in the sockaddr structure.\nReturn the length of valid data in the sockaddr structure.\nListen for connections on a socket\nCreate a new sockaddr_un representing a filesystem path.\nConstruct a new socket address from its port ID and …\nConstruct an <code>AF_ALG</code> socket from its cipher name and type.\nConstruct a <code>VsockAddr</code> from its raw fields.\nInstantiate a new <code>IpMembershipRequest</code>\nInstantiate a new <code>Ipv6MembershipRequest</code>\nCreates a new instance with the credentials of the current …\nCreates a new socket address from IPv4 octets and a port …\nCreate a new <code>sockaddr_un</code> representing an address in the “…\nCreate a new <code>sockaddr_un</code> representing an “unnamed” …\nCreate a new IpAddr that contains an IPv4 address.\nCreate a new IpAddr that contains an IPv6 address.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nIf this address represents a filesystem path, return that …\nReturns the addrlen of this socket - …\nReturn the socket’s port ID.\nReturns the process identifier\nPacket type\nPort number\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nGets the port number associated with this socket address\nPreallocate structure used by <code>recvmmsg</code> and <code>sendmmsg</code> takes …\nPhysical-layer protocol\nReceive data from a connection-oriented socket. Returns …\nReceive data from a connectionless or connection-oriented …\nAn extension of recvmsg that allows the caller to receive …\nReceive message in scatter-gather vectors from a socket, …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nReturns the scope ID associated with this address.\nReturn the eight 16-bit segments that make up this address\nSend data to a connection-oriented socket. Returns the …\nAn extension of <code>sendmsg</code> that allows the caller to transmit …\nSend data in scatter-gather vectors to a socket, possibly …\nSend a message to a socket\nSet the value of this socket option on the given socket.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nSets the value for the requested socket option\nShut down part of a full-duplex connection.\nReturn the available space in the structure\nReturn the available space in the structure\nReturn the appropriate <code>SockAddr</code> type from a …\nCreate an endpoint for communication\nCreate a pair of connected sockets\nSocket options as used by <code>setsockopt</code> and <code>getsockopt</code>.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nsoftware based timestamp, usually one containing data\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the user identifier\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns a value indicating whether or not this socket has …\nBind this socket to a particular device like “eth0”.\nSet or get the broadcast flag.\nSet or get the don’t route flag.\nJoin a multicast group\nLeave a multicast group.\nIf enabled, this boolean option allows binding to an IP …\nFetch the current system-estimated Path MTU.\nSet or read a boolean integer argument that determines …\nSet or read the time-to-live value of outgoing multicast …\nSet or receive the Type-Of-Service (TOS) field that is …\nSetting this boolean option enables transparent proxying …\nThe <code>recvmsg(2)</code> call will return the destination IP address …\nPass an <code>IP_PKTINFO</code> ancillary message that contains a …\nEnable extended reliable error message passing.\nSet or retrieve the current time-to-live field that is …\nJoin an IPv6 multicast group.\nSet “don’t fragment packet” flag on the IPv6 packet.\nLeave an IPv6 multicast group.\nThe <code>recvmsg(2)</code> call will return the destination IP address …\nControl receiving of asynchronous error options.\nSet delivery of the <code>IPV6_PKTINFO</code> control message on …\nTraffic class associated with outgoing packets\nSet the unicast hop limit for the socket.\nThe socket is restricted to sending and receiving IPv6 …\nEnable sending of keep-alive messages on …\nWhen enabled,  a close(2) or shutdown(2) will not return …\nSet the mark for each packet sent through this socket …\nIf this option is enabled, out-of-band data is directly …\nEnable or disable the receiving of the <code>SCM_CREDENTIALS</code> …\nReturn the credentials of the foreign process connected to …\nSet the protocol-defined priority for all packets to be …\nSets or gets the maximum socket receive buffer in bytes.\nUsing this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …\nSpecify the receiving timeout until reporting an error.\nEnable or disable the receiving of the <code>SO_TIMESTAMP</code> …\nEnable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …\nEnables local address reuse\nPermits multiple AF_INET or AF_INET6 sockets to be bound …\nIndicates that an unsigned 32-bit value ancillary message …\nSpecify the sending timeout until reporting an error.\nSets or gets the maximum socket send buffer in bytes.\nUsing this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …\nGets the socket type as an integer.\nGet and clear the pending socket error.\nThis option allows the caller to set the TCP congestion …\nThe maximum number of keepalive probes TCP should send …\nThe time (in seconds) the connection needs to remain idle …\nThe time (in seconds) between individual keepalive probes.\nThe maximum segment size for outgoing TCP packets.\nUnder most circumstances, TCP sends data when it is …\nSpecifies the maximum amount of time in milliseconds that …\nSpecifies exact type of timestamping information collected …\nConfigures the behavior of time-based transmission of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFlags for <code>fchmodat</code> function.\n“File mode / permissions” flags.\n“File type” flags for <code>mknod</code> and related functions.\nRead fr group.\nRead for other.\nRead for owner.\nRead write and execute for group.\nRead, write and execute for other.\nRead, write and execute for owner.\nSet group id on execution.\nSet user id on execution.\nWrite for group.\nWrite for other.\nWrite for owner.\nExecute for group.\nExecute for other.\nExecute for owner.\nFlags for <code>utimensat</code> function.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nChange the file permission bits of the file specified by a …\nChange the file permission bits.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nChange the access and modification times of the file …\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nChange the access and modification times of a file without …\nCreate a special or ordinary file, by pathname.\nCreate a special or ordinary file, relative to a given …\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nChange the access and modification times of a file.\nChange the access and modification times of a file.\nDescribes the file system type as known by the operating …\nDescribes a mounted file system\nSize of a block\nTotal data blocks in filesystem\nFree blocks available to unprivileged user\nFree blocks in filesystem\nTotal file nodes in filesystem\nFree file nodes in filesystem\nFilesystem ID\nMagic code defining system type\nGet the mount flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdentifies a mounted file system\nDescribes a mounted file system.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum length of filenames\nOptimal transfer block size\nDescribes a mounted file system.\nFile system mount Flags\nAppend-only file\nImmutable file\nAllow mandatory locks on the filesystem\nDo not update access times on files\nDo not interpret character or block-special devices\nDo not update access times on files\nDo not allow execution of binaries on the filesystem\nDo not allow the set-uid bits to have an effect\nRead Only\nUpdate access time relative to modify/change time\nAll IO should be done synchronously\nWrite on file/directory/symlink\nWrapper around the POSIX <code>statvfs</code> struct\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nget the file system block size\nGet the number of blocks.\nGet the number of free blocks for unprivileged users\nGet the number of free blocks in the file system\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nGet the total number of file inodes\nGet the number of free file inodes for unprivileged users\nGet the number of free file inodes\nGet the file system id\nGet the mount flags\nGet the fundamental file system block size\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nReturn a <code>Statvfs</code> object with information about <code>fd</code>\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nGet the maximum filename length\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturn a <code>Statvfs</code> object with information about the <code>path</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nSystem info structure returned by <code>sysinfo</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the load average tuple.\nCurrent number of processes.\nReturns the total amount of installed RAM in Bytes.\nReturns the amount of completely unused RAM in Bytes.\nReturns the amount of unused swap memory in Bytes.\nReturns the amount of swap memory in Bytes.\nReturns system information.\nReturns the time since system boot.\nBaud rates supported by the system.\nFlags for setting the control mode of a terminal\nSpecify how transmission flow should be altered\nSpecify a combination of the input and output buffers to …\nFlags for configuring the input mode of a terminal\nFlags for setting any local modes\nFlags for configuring the output mode of a terminal\nSpecify when a port configuration change should occur.\nIndices into the <code>termios.c_cc</code> array for special characters.\nFlush data that was received but not read\nTransmit a STOP character, which should disable a …\nFlush both received data not read and written data not …\nTransmit a START character, which should re-enable a …\nFlush data written but not transmitted\nSuspend transmission\nResume transmission\nThe change occurs after all output has been written\nSame as <code>TCSADRAIN</code>, but will also flush the input buffer\nThe change will occur immediately\nStores settings for the termios API\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nGet input baud rate (see cfgetispeed(3p)).\nGet output baud rate (see cfgetospeed(3p)).\nConfigures the port to something like the “raw” mode …\nSet input baud rate (see cfsetispeed(3p)).\nSet output baud rate (see cfsetospeed(3p)).\nSet both the input and output baud rates (see termios(3)).\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nControl characters (see <code>termios.c_cc</code> documentation)\nControl mode flags (see <code>termios.c_cflag</code> documentation)\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nInput mode flags (see <code>termios.c_iflag</code> documentation)\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nLine discipline (see <code>termios.c_line</code> documentation)\nLocal mode flags (see <code>termios.c_lflag</code> documentation)\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nOutput mode flags (see <code>termios.c_oflag</code> documentation)\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nBlock until all output data is written (see tcdrain(3p)).\nSuspend or resume the transmission or reception of data …\nDiscard data in the output or input queue (see tcflush(3p)…\nReturn the configuration of a port tcgetattr(3p)).\nGet the session controlled by the given terminal (see …\nSend a break for a specific duration (see tcsendbreak(3p)).\nSet the configuration for a terminal (see tcsetattr(3p)).\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMakes a new <code>TimeSpec</code> with given number of microseconds.\nMakes a new <code>TimeVal</code> with given number of microseconds.\nMakes a new <code>TimeSpec</code> with given number of nanoseconds.\nMakes a new <code>TimeVal</code> with given number of nanoseconds.  …\nConstruct a new <code>TimeSpec</code> from its components\nConstruct a new <code>TimeVal</code> from its components\nAn enumeration allowing the definition of the expiration …\nAlarm will trigger every specified interval of time.\nAlarm will trigger after a specified delay and then every …\nAlarm will trigger once after the time given in <code>TimeSpec</code>\nA Unix signal per-process timer.\nFlags that are used for arming the timer.\nReturns the argument unchanged.\nGet the parameters for the alarm currently set, if any.\nCalls <code>U::from(self)</code>.\nCreates a new timer based on the clock defined by <code>clockid</code>. …\nReturn the number of timers that have overrun\nSet a new alarm on the timer.\nLike <code>CLOCK_MONOTONIC</code>, except that <code>CLOCK_BOOTTIME</code> includes …\nLike <code>CLOCK_BOOTTIME</code>, but will wake the system if it is …\nA non-settable monotonically increasing clock.\nA settable system-wide real-time clock.\nLike <code>CLOCK_REALTIME</code>, but will wake the system if it is …\nThe type of the clock used to mark the progress of the …\nAn enumeration allowing the definition of the expiration …\nAlarm will trigger every specified interval of time.\nAlarm will trigger after a specified delay and then every …\nAlarm will trigger once after the time given in <code>TimeSpec</code>\nSet the <code>FD_CLOEXEC</code> flag on the file descriptor.\nSet the <code>O_NONBLOCK</code> flag on the open file description …\nA timerfd instance. This is also a file descriptor, you …\nAdditional flags to change the behaviour of the file …\nFlags that are used for arming the timer.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …")